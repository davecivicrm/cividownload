<?php
/**
 * Add menu item
 *
 * @return array
 */
function cividownload_menu() {
  $items = array();
  $items['cividownload'] = array(
    'title' => t('CiviCRM Downloads'),
    'page callback' => 'cividownload_download_page',
    'access arguments' => array('access content'),
    'type' => MENU_SUGGESTED_ITEM,
  );

  $items['admin/config/content/cividownload'] = array(
    'title' => 'CiviDowload module settings',
    'description' => 'Set the CiviCRM version that is available for download',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cividownload_settings'),
    'access arguments' => array('administer modules'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function cividownload_download_page() {
  drupal_add_css(drupal_get_path('module', 'cividownload') . '/cividownload.css', array('weight' => 1000));

  $content = cividownload_download_list();
  return theme('cividownload_custompage_template', array('content' => $content));
}

function cividownload_download_list() {
  drupal_set_title('');

  // get the current stable version
  $current_version = getCurrentVersion();

  // contribution page
  $url = '/civicrm/contribute/transact?reset=1&id=63&filename=';

  // build urls for the releases
  $content['download_urls'] = array(
    'drupal' => array(
      'title' => t('Drupal 7'),
      'filename' => "civicrm-{$current_version}-drupal.tar.gz",
      'url' => "{$url}civicrm-{$current_version}-drupal.tar.gz",
    ),
    'drupal6' => array(
      'title' => t('Drupal 6'),
      'filename' => "civicrm-{$current_version}-drupal6.tar.gz",
      'url' => "{$url}civicrm-{$current_version}-drupal6.tar.gz",
    ),
    'joomla' => array(
      'title' => t('Joomla'),
      'filename' => "civicrm-{$current_version}-joomla.zip",
      'url' => "{$url}civicrm-{$current_version}-joomla.zip",
    ),
    'wordpress' => array(
      'title' => t('WordPress'),
      'filename' => "civicrm-{$current_version}-wordpress.zip",
      'url' => "{$url}civicrm-{$current_version}-wordpress.zip",
    ),
  );

  return $content;
}

function cividownload_theme($existing, $type, $theme, $path) {
  return array(
    'cividownload_custompage_template' => array(
      'template' => 'cividownload',
      'arguments' => array(),
    ),
  );
}

function getCurrentVersion() {
  return variable_get('civicrm_stable_version', '4.4.0');
}

function cividownload_settings() {
  $form = array();
  $form['civicrm_stable_version'] = array(
    '#type' => 'textfield',
    '#title' => t('CiviCRM version that should be available for download'),
    '#default_value' => variable_get('civicrm_stable_version', '4.4.0'),
    '#size' => 10,
    '#maxlength' => 10,
    '#description' => t("Please enter current stable version of CiviCRM, for eg: 4.4.0"),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}

/**
 * Implementation of CiviCRM's config hook
 * @param null $config
 */
function cividownload_civicrm_config(&$config = NULL) {
  static $configured = FALSE;
  if ($configured) {
    return;
  }
  $configured = TRUE;

  $template =& CRM_Core_Smarty::singleton();

  $extRoot = dirname(__FILE__) . DIRECTORY_SEPARATOR;
  $extDir = $extRoot . 'templates';

  if (is_array($template->template_dir)) {
    array_unshift($template->template_dir, $extDir);
  }
  else {
    $template->template_dir = array($extDir, $template->template_dir);
  }

  $include_path = $extRoot . PATH_SEPARATOR . get_include_path();
  set_include_path($include_path);
}


/**
 * Implementation of CiviCRM's buildForm hook to modify contribution page
 */
function cividownload_civicrm_buildForm($formName, &$form) {
  if ($formName == 'CRM_Contribute_Form_Contribution_Main' && $form->_id = 63) {
    drupal_set_title('');
    // add require js and css files
    drupal_add_library('system', 'ui.slider');
    drupal_add_css(drupal_get_path('module', 'cividownload') . '/cividownload.css', array('weight' => 1000));
    drupal_add_js(drupal_get_path('module', 'cividownload') . '/cividownload.js', array('weight' => 1000));

    // get the filename from the url
    $fileName = CRM_Utils_Request::retrieve('filename', 'String', $form);
    if ($fileName) {
      $form->assign('downloadURL', "https://download.civicrm.org/{$fileName}");
    }
  }
}